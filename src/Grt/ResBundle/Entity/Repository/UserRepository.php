<?php

namespace Grt\ResBundle\Entity\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    private $fieldSorting = array('firstname','lastname','middlename');
    private $fieldlocationSorting = array('location');
    private $fieldDepartmentSorting = array('department');

    public function findUsers($lastname, $location,$department)
    {

        $db = $this->createQueryBuilder('u')
            ->select('u');

        if ($lastname){
            $db->where('u.lastname LIKE :lastname')
                ->setParameter(':lastname','%'.$lastname.'%');
        }

        if ($location){
            $db->andWhere('u.location =:location')->setParameter(':location',$location);
        }

        if ($department){
            $db->andWhere('u.department =:department')->setParameter(':department',$department);
        }

        return $db->getQuery()->getResult();
    }

    public function getAllUsers($field = 'firstname',$order = 'ASC',$currentPage = 1, $limit = 50)
    {

        $db = null;

        if (in_array($field, $this->fieldSorting)) {
            $field = 'u.' . $field;

            $db = $this->createQueryBuilder('u')
                ->orderBy($field, $order)
                ->getQuery();
        }

        if (in_array($field, $this->fieldlocationSorting)) {
                $field = 'loc.name';
                $db = $this->createQueryBuilder('u')
                    ->select('u')
                    ->innerJoin('GrtResBundle:Location', 'loc', 'WITH', 'u.location = loc.id')
                    ->orderBy($field, $order)
                    ->getQuery();
        }

        if (in_array($field, $this->fieldDepartmentSorting)) {
                $field = 'dep.name';
                $db = $this->createQueryBuilder('u')
                    ->select('u')
                    ->innerJoin('GrtResBundle:Department', 'dep', 'WITH', 'u.department = dep.id ')
                    ->orderBy($field, $order)
                    ->getQuery();
        }

        if ($db) {
            $paginator = new Paginator($db);

            $paginator->getQuery()
                ->setFirstResult($limit * ($currentPage - 1))// Offset
                ->setMaxResults($limit); // Limit

            return $paginator;
        } else {
            return null;
        }
    }

}
